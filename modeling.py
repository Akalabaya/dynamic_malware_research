from calendar import prweek
import pandas as pd
import numpy as np
from sklearn.ensemble import RandomForestClassifier
from sklearn import preprocessing
from sklearn.model_selection import train_test_split
import pickle
from sklearn.model_selection import cross_val_score

from sklearn.metrics import classification_report

benign_data = pd.read_csv("clean_benign_API_dataset.csv", header = None)
malware_data = pd.read_csv("malware_API_dataset.csv", header = None, dtype= str,on_bad_lines='skip')
benign_data.insert(loc=0, column='classe', value='0')
malware_data.insert(loc=0, column='classe', value='1')
malware_data_sample = malware_data.sample(n=700, replace=True)
dataset = pd.concat([benign_data, malware_data_sample], ignore_index=True)


dataset_X = dataset.values[:,4:550]

dataset_Y = dataset.values[:,0]


#Usar o Label Encoder para dar valores para as API Calls de cada linha
le = preprocessing.LabelEncoder()

dataset_X_pandas = pd.DataFrame(dataset_X,dtype=str)
dataset_X_pandas.apply(le.fit_transform)

dataset_X2 = dataset_X_pandas.apply(le.fit_transform).values[:,:]





# print(dataset_X.shape) 
# print(dataset_Y.shape)

X_train, X_test, Y_train, Y_test = train_test_split(dataset_X2, dataset_Y, test_size=0.3, random_state=42)
# print(X_train.shape, Y_train.shape)
# print(X_test.shape, Y_test.shape)

clf = RandomForestClassifier()
clf.fit(X_train, Y_train)

Y_pred = clf.predict(X_test)
target_names = ['Benigno', 'Malware']
print(classification_report(Y_test, Y_pred, target_names=target_names))

pickle.dump(clf, open("models/predictlayer1.pkl","wb"))

l = len(list(dataset_X))
i = 0
d = {}
while i < l:
    ic = 0
    l2 = len(dataset_X[i])
    while ic < l2:
        d[dataset_X[i][ic]] = dataset_X2[i][ic]
        #Incrementor
        ic += 1
    #Incrementor
    i += 1

print(d)
pickle.dump(d, open("models/featuretoken.pkl","wb"))





